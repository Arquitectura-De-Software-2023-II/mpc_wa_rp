upstream web_frontend_node {
    server host.docker.internal:9090;
}
server {
    # https config
    listen 5050 ssl;
    server_name mypetcare.com;
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/privateKey.key;
    #ssl_client_certificate /etc/nginx/ssl/ca.crt;
    #ssl_verify_client optional;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_timeout 15m;

    proxy_buffers 64 16k;
    proxy_max_temp_file_size 1024m;
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;

    location ~ /\. {
        deny all;
    }

    location ~* ^.+\.(rb|log)$ {
        deny all;
    }
    
    # serve static (compiled) assets directly if they exist (for node production)
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
        try_files $uri @web_frontend_node;
        access_log off;
        gzip_static on; # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;
        # Some browsers still send conditional-GET requests if there's a
        # Last-Modified header or an ETag header even if they haven't
        # reached the expiry date sent in the Expires header.
        add_header Last-Modified "";
        add_header ETag "";
        break;
    }

    location / {
        try_files $uri $uri/ @web_frontend_node;
    }

    location @web_frontend_node {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://web_frontend_node;
        access_log /var/www/web-frontend/log/nginx.access.log;
        error_log /var/www/web-frontend/log/nginx.error.log;
    }
}